generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Candidate {
  id          Int           @id @default(autoincrement())
  candidateId String        @db.VarChar(20)
  server      Server        @relation(fields: [serverId], references: [id])
  serverId    String        @db.VarChar(20)
  champVotes  Vote[]        @relation(name: "ChampVote")
  chumpVotes  Vote[]        @relation(name: "ChumpVote")
  eligibility Eligibility[]

  @@unique([candidateId, serverId])
}

model Eligibility {
  id          Int            @id @default(autoincrement())
  candidate   Candidate      @relation(fields: [candidateId], references: [id])
  candidateId Int
  server      Server         @relation(fields: [serverId], references: [id])
  serverId    String         @db.VarChar(20)
  type        NominationType

  @@unique([candidateId, serverId, type])
}

enum NominationType {
  CHAMP
  CHUMP
}

model Nomination {
  id          Int            @id @default(autoincrement())
  nomineeId   String         @db.VarChar(20)
  nominatorId String         @db.VarChar(20)
  reason      String         @db.VarChar(200)
  type        NominationType
  server      Server         @relation(fields: [serverId], references: [id])
  serverId    String         @db.VarChar(20)
}

model Server {
  id            String        @id @default(cuid()) @db.VarChar(20)
  channelId     String?       @db.VarChar(20)
  candidates    Candidate[]
  eligibilities Eligibility[]
  nominations   Nomination[]
  votes         Vote[]
}

model Vote {
  id       Int        @id @default(autoincrement())
  voterId  String     @db.VarChar(20)
  server   Server     @relation(fields: [serverId], references: [id])
  serverId String     @db.VarChar(20)
  champ    Candidate? @relation(name: "ChampVote", fields: [champId], references: [id])
  chump    Candidate? @relation(name: "ChumpVote", fields: [chumpId], references: [id])
  champId  Int?
  chumpId  Int?

  @@unique([serverId, voterId])
}
